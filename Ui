local Library = {}

function Library.newUI()
    local UI = {}

    -- Create the main ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "LibraryUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = game.Players.LocalPlayer.PlayerGui

    -- Create the main frame
    UI.Frame = Instance.new("Frame")
    UI.Frame.Name = "MainFrame"
    UI.Frame.BackgroundColor3 = Color3.new(0, 0, 0)
    UI.Frame.BackgroundTransparency = 0.5
    UI.Frame.Size = UDim2.new(0, 400, 0, 300)
    UI.Frame.Position = UDim2.new(0.5, -200, 0.5, -150)
    UI.Frame.Parent = screenGui
    UI.Frame.BorderSizePixel = 0
    
    UI.Header = Instance.new("Frame")
    UI.Header.Name = "Header"
    UI.Header.BackgroundColor3 = Color3.new(0, 0, 0)
    UI.Header.BackgroundTransparency = 0.5
    UI.Header.Size = UDim2.new(1, 0, 0, 30)
    UI.Header.Position = UDim2.new(0, 0, 0, 0)
    UI.Header.Parent = UI.Frame

    -- Create the title
    UI.Title = Instance.new("TextLabel")
    UI.Title.Name = "Title"
    UI.Title.BackgroundColor3 = Color3.new(0, 0, 0)
    UI.Title.BackgroundTransparency = 0.5
    UI.Title.Size = UDim2.new(1, 0, 0, 30)
    UI.Title.Position = UDim2.new(0, 0, 0, 0)
    UI.Title.TextColor3 = Color3.new(1, 1, 1)
    UI.Title.Text = "Psithurism"
    UI.Title.Font = Enum.Font.SourceSansBold
    UI.Title.TextSize = 18
    UI.Title.Parent = UI.Header

    -- Create the tab container as a ScrollingFrame
    UI.TabContainer = Instance.new("ScrollingFrame")
    UI.TabContainer.Name = "TabContainer"
    UI.TabContainer.BackgroundColor3 = Color3.new(0, 0, 0)
    UI.TabContainer.BackgroundTransparency = 0.8
    UI.TabContainer.Size = UDim2.new(1, 0, 0, 30)
    UI.TabContainer.Position = UDim2.new(0, 0, 0, 30)
    UI.TabContainer.ScrollBarThickness = 0 -- Hide the default scrollbar
    UI.TabContainer.ScrollingEnabled = true -- Enable horizontal scrolling
    UI.TabContainer.Parent = UI.Frame
    UI.TabContainer.BorderSizePixel = 0

    -- Create the content container
    UI.ContentContainer = Instance.new("Frame")
    UI.ContentContainer.Name = "ContentContainer"
    UI.ContentContainer.BackgroundColor3 = Color3.new(0, 0, 0)
    UI.ContentContainer.BackgroundTransparency = 0.8
    UI.ContentContainer.Size = UDim2.new(1, 0, 1, -60)
    UI.ContentContainer.Position = UDim2.new(0, 0, 0, 60)
    UI.ContentContainer.Parent = UI.Frame

    -- Function to add a new tab
    function UI:AddTab(tabName)
        local tabButton = Instance.new("TextButton")
        tabButton.Name = tabName
        tabButton.BackgroundColor3 = Color3.new(0, 0, 0)
        tabButton.BackgroundTransparency = 0.8
        tabButton.Size = UDim2.new(0, 80, 1, 0)
        tabButton.Font = Enum.Font.SourceSansBold
        tabButton.TextSize = 14
        tabButton.TextColor3 = Color3.new(1, 1, 1) -- Change the text color to white
        tabButton.Text = tabName
        tabButton.Parent = UI.TabContainer

        -- Create the tab content frame
        local tabContent = Instance.new("Frame")
        tabContent.Name = "Content"
        tabContent.BackgroundColor3 = Color3.new(0, 0, 0)
        tabContent.BackgroundTransparency = 0.8
        tabContent.Size = UDim2.new(1, 0, 1, 0)
        tabContent.Position = UDim2.new(0, 0, 0, 0)
        tabContent.Parent = UI.ContentContainer

        -- Set the tab's layout order based on the number of existing tabs
        tabButton.LayoutOrder = #UI.TabContainer:GetChildren()

        -- Connect the tab button's MouseButton1Click event to switch to the tab
        tabButton.MouseButton1Click:Connect(function()
            -- Hide all tab contents
            for _, child in ipairs(UI.ContentContainer:GetChildren()) do
                child.Visible = false
            end

            -- Show the selected tab content
            tabContent.Visible = true
        end)

        -- Show the first tab by default
        if #UI.ContentContainer:GetChildren() == 1 then
            tabContent.Visible = true
        else
            tabContent.Visible = false
        end

        return tabContent
    end

    -- Function to add a button to a tab
    function UI:AddButton(tab, buttonName, callback)
        local button = Instance.new("TextButton")
        button.Name = buttonName
        button.BackgroundColor3 = Color3.new(0, 0, 0)
        button.BackgroundTransparency = 0.5
        button.Size = UDim2.new(0, 120, 0, 40)
        button.Position = UDim2.new(0, 20, 0, 20)
        button.Font = Enum.Font.SourceSans
        button.TextSize = 14
        button.TextColor3 = Color3.new(1, 1, 1)
        button.Text = buttonName
        button.Parent = tab

        button.MouseButton1Click:Connect(callback)
    end

    -- Function to add a toggle switch to a tab
    function UI:AddToggle(tab, toggleName, initialState, callback)
        local toggleContainer = Instance.new("Frame")
        toggleContainer.Name = toggleName
        toggleContainer.BackgroundColor3 = Color3.new(0, 0, 0)
        toggleContainer.BackgroundTransparency = 0.5
        toggleContainer.Size = UDim2.new(0, 100, 0, 30)
        toggleContainer.Position = UDim2.new(0, 20, 0, 80)
        toggleContainer.Parent = tab

        local toggleLabel = Instance.new("TextLabel")
        toggleLabel.Name = "Label"
        toggleLabel.BackgroundColor3 = Color3.new(0, 0, 0)
        toggleLabel.BackgroundTransparency = 1
        toggleLabel.Size = UDim2.new(1, -40, 1, 0)
        toggleLabel.Position = UDim2.new(0, 40, 0, 0)
        toggleLabel.Font = Enum.Font.SourceSans
        toggleLabel.TextSize = 14
        toggleLabel.TextColor3 = Color3.new(1, 1, 1)
        toggleLabel.Text = toggleName
        toggleLabel.Parent = toggleContainer

        local toggleButton = Instance.new("TextButton")
        toggleButton.Name = "Button"
        toggleButton.BackgroundColor3 = Color3.new(0, 0, 0)
        toggleButton.BackgroundTransparency = 0.8
        toggleButton.Size = UDim2.new(0, 40, 1, 0)
        toggleButton.Position = UDim2.new(0, 0, 0, 0)
        toggleButton.Font = Enum.Font.SourceSans
        toggleButton.TextSize = 14
        toggleButton.TextColor3 = Color3.new(1, 1, 1)
        toggleButton.Text = ""
        toggleButton.Parent = toggleContainer

        local toggleState = initialState or false

        -- Update the toggle state visually
        local function updateToggleState()
            if toggleState then
                toggleButton.BackgroundColor3 = Color3.new(0, 0.8, 0)
            else
                toggleButton.BackgroundColor3 = Color3.new(0.8, 0, 0)
            end
        end

        -- Call the callback with the new toggle state
        local function toggleButtonClicked()
            toggleState = not toggleState
            updateToggleState()
            callback(toggleState)
        end

        toggleButton.MouseButton1Click:Connect(toggleButtonClicked)

        -- Initialize the toggle state
        updateToggleState()
    end

    return UI
end

return Library.newUI()
